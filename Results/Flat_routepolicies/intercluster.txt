Inter-cluster distance method outliers: [1, 3, 5, 6, 7, 8, 10, 11, 12, 16, 18, 19, 20, 21, 22, 25, 26, 27, 29, 31, 34, 39, 41, 42, 44, 45, 47, 49, 50, 54, 55, 57, 58, 61, 63, 69, 70, 72, 74, 77, 83, 84, 85, 92, 96]
======================================================================================================================================================================================================================

Outlier index: 1
	Node: ['st73in23p5as']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 3
	Node: ['st73in22p5as']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 5
	Node: ['st73in24p4as']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 6
	Node: ['st55in15hras']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 7
	Node: ['st75in18hras']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 8
	Node: ['st73in25p4as']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 10
	Node: ['rt75in11hrds']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}, {'calledPolicyName': 'evmsn-networks-allowed', 'class': 'org.batfish.datamodel.routing_policy.expr.CallExpr'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 11
	Node: ['st55in64hras']
	FROM_EDGE: ['None']

Outlier index: 12
	Node: ['lb73in26p4as']
	FROM_EDGE: ['None']

Outlier index: 16
	Node: ['st73in91m5as']
	FROM_EDGE: ['None']

Outlier index: 18
	Node: ['st73in67p5as']
	FROM_EDGE: ['None']

Outlier index: 19
	Node: ['st75in16hras']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 20
	Node: ['rt62in82rh']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 21
	Node: ['rt73in09m5ce']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for bgp', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 1}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'bgp', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}, {'comment': 'OSPF export routes for connected', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'connected', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 22
	Node: ['st62in83bsce']
	FROM_EDGE: ['None']

Outlier index: 25
	Node: ['st75hr93']
	FROM_EDGE: ['None']

Outlier index: 26
	Node: ['rt55in72hrce']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for bgp', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 1}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'bgp', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}, {'comment': 'OSPF export routes for connected', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'connected', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 27
	Node: ['st75hr92']
	FROM_EDGE: ['None']

Outlier index: 29
	Node: ['rt75in73hrce']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for bgp', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 1}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'bgp', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}, {'comment': 'OSPF export routes for connected', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'connected', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 31
	Node: ['rt55in80hrtn']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 34
	Node: ['st73in90m4as']
	FROM_EDGE: ['None']

Outlier index: 39
	Node: ['st55hr90']
	FROM_EDGE: ['None']

Outlier index: 41
	Node: ['st55in62hras']
	FROM_EDGE: ['None']

Outlier index: 42
	Node: ['st55hr91']
	FROM_EDGE: ['None']

Outlier index: 44
	Node: ['rt55in10hrds']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}, {'calledPolicyName': 'evmsn-networks-allowed', 'class': 'org.batfish.datamodel.routing_policy.expr.CallExpr'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 45
	Node: ['st73in20p4as']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 47
	Node: ['st73in21p4as']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]

Outlier index: 49
	Node: ['st55in63hras']
	FROM_EDGE: ['None']

Outlier index: 50
	Node: ['st73in65p5as']
	FROM_EDGE: ['None']

Outlier index: 54
	Node: ['st62in82bsce']
	FROM_EDGE: ['None']

Outlier index: 55
	Node: ['rt55in81hrtn']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 57
	Node: ['st75ince02']
	FROM_EDGE: ['None']

Outlier index: 58
	Node: ['rt73in12p5ds']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}, {'calledPolicyName': 'evmsn-networks-allowed', 'class': 'org.batfish.datamodel.routing_policy.expr.CallExpr'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 61
	Node: ['rt62bs82']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 63
	Node: ['st73in66p5as']
	FROM_EDGE: ['None']

Outlier index: 69
	Node: ['rt62bs83']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 70
	Node: ['st73in64p5as']
	FROM_EDGE: ['None']

Outlier index: 72
	Node: ['rt62in83rh']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 74
	Node: ['rt73in13p5ds']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for static', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'static', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}, {'calledPolicyName': 'evmsn-networks-allowed', 'class': 'org.batfish.datamodel.routing_policy.expr.CallExpr'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 77
	Node: ['st55hr73a']
	FROM_EDGE: ['None']

Outlier index: 83
	Node: ['lb73in27p4as']
	FROM_EDGE: ['None']

Outlier index: 84
	Node: ['st55hr72a']
	FROM_EDGE: ['None']

Outlier index: 85
	Node: ['st55in65hras']
	FROM_EDGE: ['None']

Outlier index: 92
	Node: ['rt73in08m4ce']
	FROM_EDGE: ["{'statements': [{'comment': 'OSPF export routes for bgp', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 1}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'bgp', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}, {'comment': 'OSPF export routes for connected', 'trueStatements': [{'class': 'org.batfish.datamodel.routing_policy.statement.SetOspfMetricType', 'metricType': 'E2'}, {'metric': {'class': 'org.batfish.datamodel.routing_policy.expr.LiteralLong', 'value': 20}, 'class': 'org.batfish.datamodel.routing_policy.statement.SetMetric'}, {'type': 'ExitAccept', 'class': 'org.batfish.datamodel.routing_policy.statement.Statements$StaticStatement'}], 'guard': {'conjuncts': [{'protocol': 'connected', 'class': 'org.batfish.datamodel.routing_policy.expr.MatchProtocol'}, {'expr': {'comment': 'match default route', 'prefix': {'class': 'org.batfish.datamodel.routing_policy.expr.DestinationNetwork'}, 'class': 'org.batfish.datamodel.routing_policy.expr.MatchPrefixSet', 'prefixSet': {'class': 'org.batfish.datamodel.routing_policy.expr.ExplicitPrefixSet', 'prefixSpace': ['0.0.0.0/0']}}, 'class': 'org.batfish.datamodel.routing_policy.expr.Not'}], 'class': 'org.batfish.datamodel.routing_policy.expr.Conjunction'}, 'class': 'org.batfish.datamodel.routing_policy.statement.If'}], 'name': '~OSPF_EXPORT_POLICY:default~'}"]

Outlier index: 96
	Node: ['st55in17hras']
	FROM_EDGE: ["{'name': '~RIP_EXPORT_POLICY:default~'}"]


